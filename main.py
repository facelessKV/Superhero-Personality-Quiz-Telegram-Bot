import logging
from aiogram import Bot, Dispatcher, Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import os
from dotenv import load_dotenv
import random

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
# –Ø –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥, —á—Ç–æ–±—ã –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –≤ –∫–æ–¥–µ
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
# –í aiogram 3.x –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –≤ –ø–∞–º—è—Ç–∏
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞ (FSM)
# –ö–∞–∂–¥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É —Ç–µ—Å—Ç–∞
class SuperheroTest(StatesGroup):
    question1 = State()  # –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    question2 = State()  # –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
    question3 = State()  # –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
    question4 = State()  # –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å
    question5 = State()  # –ü—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å

# –í–æ–ø—Ä–æ—Å—ã –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
# –ö–∞–∂–¥—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –∏–º–µ–µ—Ç –±–∞–ª–ª—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É–ø–µ—Ä–≥–µ—Ä–æ–µ–≤
# –Ø –¥–æ–ª–≥–æ –¥—É–º–∞–ª –Ω–∞–¥ –≤–æ–ø—Ä–æ—Å–∞–º–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∏—Ö –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∑–∞–±–∞–≤–Ω—ã–º–∏ :)
questions = [
    {
        "text": "–ß—Ç–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏?",
        "options": [
            {"text": "–ù–µ–≤–∏–¥–∏–º–æ—Å—Ç—å", "points": {"batman": 1, "superman": 0, "spiderman": 0, "ironman": 0, "deadpool": 2}},
            {"text": "–°—É–ø–µ—Ä—Å–∏–ª–∞", "points": {"batman": 0, "superman": 3, "spiderman": 1, "ironman": 0, "deadpool": 0}},
            {"text": "–ü–æ–ª—ë—Ç", "points": {"batman": 0, "superman": 2, "spiderman": 0, "ironman": 2, "deadpool": 0}},
            {"text": "–ì–µ–Ω–∏–∞–ª—å–Ω—ã–π —É–º", "points": {"batman": 3, "ironman": 3, "superman": 0, "spiderman": 1, "deadpool": 0}},
        ]
    },
    {
        "text": "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –±–æ—Ä—å–±—ã —Å–æ –∑–ª–æ–º —Ç–µ–±–µ –±–ª–∏–∂–µ?",
        "options": [
            {"text": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≥–∞–¥–∂–µ—Ç—ã", "points": {"batman": 2, "ironman": 3, "superman": 0, "spiderman": 1, "deadpool": 0}},
            {"text": "–ì—Ä—É–±–∞—è —Å–∏–ª–∞ –∏ –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç—å", "points": {"batman": 0, "superman": 3, "ironman": 1, "spiderman": 0, "deadpool": 2}},
            {"text": "–Æ–º–æ—Ä –∏ —Ö–∞—Ä–∏–∑–º–∞", "points": {"batman": 0, "superman": 0, "ironman": 1, "spiderman": 2, "deadpool": 3}},
            {"text": "–õ–æ–≤–∫–æ—Å—Ç—å –∏ –∏–Ω—Ç—É–∏—Ü–∏—è", "points": {"batman": 1, "superman": 0, "ironman": 0, "spiderman": 3, "deadpool": 1}},
        ]
    },
    {
        "text": "–¢–≤–æ–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç –∫–æ—Å—Ç—é–º–∞ –¥–ª—è —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è?",
        "options": [
            {"text": "–ß—ë—Ä–Ω—ã–π", "points": {"batman": 3, "superman": 0, "ironman": 0, "spiderman": 0, "deadpool": 0}},
            {"text": "–ö—Ä–∞—Å–Ω—ã–π —Å —Å–∏–Ω–∏–º", "points": {"batman": 0, "superman": 3, "spiderman": 2, "ironman": 0, "deadpool": 0}},
            {"text": "–ö—Ä–∞—Å–Ω—ã–π —Å –∑–æ–ª–æ—Ç—ã–º", "points": {"batman": 0, "superman": 0, "ironman": 3, "spiderman": 0, "deadpool": 0}},
            {"text": "–ö—Ä–∞—Å–Ω—ã–π", "points": {"batman": 0, "superman": 0, "ironman": 0, "spiderman": 0, "deadpool": 3}},
        ]
    },
    {
        "text": "–ö–∞–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ –ª—é–¥—è—Ö —Ç—ã —Ü–µ–Ω–∏—à—å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?",
        "options": [
            {"text": "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "points": {"batman": 2, "superman": 3, "ironman": 0, "spiderman": 1, "deadpool": 0}},
            {"text": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç", "points": {"batman": 2, "ironman": 3, "superman": 0, "spiderman": 1, "deadpool": 0}},
            {"text": "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", "points": {"batman": 1, "superman": 2, "ironman": 0, "spiderman": 3, "deadpool": 0}},
            {"text": "–ß—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞", "points": {"batman": 0, "superman": 0, "ironman": 2, "spiderman": 1, "deadpool": 3}},
        ]
    },
    {
        "text": "–ö–∞–∫ –±—ã —Ç—ã –ø—Ä–æ–≤–æ–¥–∏–ª —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?",
        "options": [
            {"text": "–ò–∑–æ–±—Ä–µ—Ç–∞—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ", "points": {"batman": 2, "ironman": 3, "superman": 0, "spiderman": 1, "deadpool": 0}},
            {"text": "–ü–æ–º–æ–≥–∞—è –Ω—É–∂–¥–∞—é—â–∏–º—Å—è", "points": {"batman": 1, "superman": 3, "ironman": 0, "spiderman": 2, "deadpool": 0}},
            {"text": "–¢—Ä–µ–Ω–∏—Ä—É—è—Å—å –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É—è—Å—å", "points": {"batman": 3, "superman": 1, "ironman": 1, "spiderman": 2, "deadpool": 0}},
            {"text": "–†–∞–∑–≤–ª–µ–∫–∞—è—Å—å –∏ —à—É—Ç—è", "points": {"batman": 0, "superman": 0, "ironman": 1, "spiderman": 1, "deadpool": 3}},
        ]
    },
]

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è –ø—Ä–æ–ø–∏—Å–∞–ª –∑–∞–±–∞–≤–Ω–æ–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
superhero_results = {
    "batman": {
        "name": "–ë—ç—Ç–º–µ–Ω",
        "description": "–¢—ã - –¢—ë–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å! –ë–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π –∏ —Ä–∞—Å—á–µ—Ç–ª–∏–≤—ã–π, —Ç—ã –ø–æ–ª–∞–≥–∞–µ—à—å—Å—è –Ω–∞ —Å–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É. –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –¥–ª—è —Ç–µ–±—è –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ, –∏ —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞ –≤—Å—ë —Ä–∞–¥–∏ –∑–∞—â–∏—Ç—ã –Ω–µ–≤–∏–Ω–Ω—ã—Ö. –í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –≤ —à–∫–∞—Ñ—É –µ—Å—Ç—å –ø–ª–∞—â... –∏–ª–∏ –∫–∞–∫ –º–∏–Ω–∏–º—É–º —á—ë—Ä–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞."
    },
    "superman": {
        "name": "–°—É–ø–µ—Ä–º–µ–Ω",
        "description": "–¢—ã - –ß–µ–ª–æ–≤–µ–∫ –∏–∑ —Å—Ç–∞–ª–∏! –°–∏–ª—å–Ω—ã–π –∏ –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π, —Ç—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø—Ä–∏–π—Ç–∏ –Ω–∞ –ø–æ–º–æ—â—å –∏ —Å–¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ. –¢–≤–æ—ë —á—É–≤—Å—Ç–≤–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ –Ω–µ–ø–æ–∫–æ–ª–µ–±–∏–º–∞—è –º–æ—Ä–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–µ–ª–∞—é—Ç —Ç–µ–±—è –æ–±—Ä–∞–∑—Ü–æ–º –¥–ª—è –ø–æ–¥—Ä–∞–∂–∞–Ω–∏—è. –¢–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—ã–≤–∞–π –≤—Ä–µ–º—è –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å–Ω–∏–º–∞—Ç—å –æ—á–∫–∏, —á—Ç–æ–±—ã –≤—Å–µ –Ω–µ –¥–æ–≥–∞–¥–∞–ª–∏—Å—å –æ —Ç–≤–æ–µ–π –∏—Å—Ç–∏–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏!"
    },
    "ironman": {
        "name": "–ñ–µ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫",
        "description": "–¢—ã - –¢–æ–Ω–∏ –°—Ç–∞—Ä–∫! –ì–µ–Ω–∏–∞–ª—å–Ω—ã–π –∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å —Å –æ—Ç–ª–∏—á–Ω—ã–º —á—É–≤—Å—Ç–≤–æ–º —Å—Ç–∏–ª—è. –¢–≤–æ–π –æ—Å—Ç—Ä—ã–π —É–º –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç —Ç–µ–±–µ —Ä–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –∞ —Ö–∞—Ä–∏–∑–º–∞ –ø–æ–∫–æ—Ä—è–µ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö. –í–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –¥–æ–º–∞ –µ—Å—Ç—å –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è –∏ –Ω–µ–¥–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≥–∞–¥–∂–µ—Ç—ã... –∏–ª–∏ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–º–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤."
    },
    "spiderman": {
        "name": "–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫",
        "description": "–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ—Å–µ–¥ –ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫! –¢—ã –Ω–∞—Ö–æ–¥—á–∏–≤—ã–π, —É–º–Ω—ã–π –∏ –æ–±–ª–∞–¥–∞–µ—à—å –æ—Ç–ª–∏—á–Ω—ã–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞ –¥–∞–∂–µ –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö. –¢–µ–±–µ –≤–∞–∂–Ω—ã –±–ª–∏–∑–∫–∏–µ –ª—é–¥–∏, –∏ —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞ –≤—Å—ë, —á—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å –∏—Ö. –ò –¥–∞, —Ç—ã —Ç–æ—á–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ—à—å —Å–≤–æ–∏ —Å–µ–ª—Ñ–∏ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π!"
    },
    "deadpool": {
        "name": "–î—ç–¥–ø—É–ª",
        "description": "–¢—ã - –ë–æ–ª—Ç–ª–∏–≤—ã–π –Ω–∞—ë–º–Ω–∏–∫! –¢–≤–æ—ë —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ –Ω–µ –∑–Ω–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü, –∫–∞–∫ –∏ —Ç–≤–æ—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å. –¢—ã –∏–¥—ë—à—å —Å–≤–æ–∏–º –ø—É—Ç—ë–º, –Ω–µ –æ—Å–æ–±–æ –∑–∞–±–æ—Ç—è—Å—å –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏ —É—Å–ª–æ–≤–Ω–æ—Å—Ç—è—Ö. –í —Ç–≤–æ—ë–º —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –µ—Å—Ç—å —á–∏–º–∏—á–∞–Ω–≥–∏, –∞ —Ç–≤–æ–∏ –¥—Ä—É–∑—å—è –∑–Ω–∞—é—Ç, —á—Ç–æ —Å —Ç–æ–±–æ–π –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç —Å–∫—É—á–Ω–æ!"
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
def create_options_keyboard(options):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    kb = []
    for option in options:
        kb.append([KeyboardButton(text=option["text"])])
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, one_time_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    await state.clear()
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –∫–∞–∫–æ–π —Ç—ã —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π! ü¶∏‚Äç‚ôÇÔ∏è\n"
        "–ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π—Å–∫—É—é —Å—É—â–Ω–æ—Å—Ç—å? –û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ —è —Å–∫–∞–∂—É, –∫—Ç–æ —Ç—ã –∏–∑ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–µ–≤!"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    await state.set_state(SuperheroTest.question1)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
    await message.answer(
        f"–í–æ–ø—Ä–æ—Å 1: {questions[0]['text']}", 
        reply_markup=create_options_keyboard(questions[0]["options"])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /restart
@router.message(Command("restart"))
async def cmd_restart(message: Message, state: FSMContext):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    await message.answer("–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å –Ω–∞—á–∞–ª–∞
    await cmd_start(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
@router.message(SuperheroTest.question1)
async def process_question_1(message: Message, state: FSMContext):
    answer = message.text
    
    # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
    selected_option = None
    for option in questions[0]["options"]:
        if option["text"] == answer:
            selected_option = option
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    if not selected_option:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    await state.update_data(q1=selected_option["points"])
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.set_state(SuperheroTest.question2)
    await message.answer(
        f"–í–æ–ø—Ä–æ—Å 2: {questions[1]['text']}",
        reply_markup=create_options_keyboard(questions[1]["options"])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
@router.message(SuperheroTest.question2)
async def process_question_2(message: Message, state: FSMContext):
    answer = message.text
    
    # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
    selected_option = None
    for option in questions[1]["options"]:
        if option["text"] == answer:
            selected_option = option
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    if not selected_option:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    await state.update_data(q2=selected_option["points"])
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.set_state(SuperheroTest.question3)
    await message.answer(
        f"–í–æ–ø—Ä–æ—Å 3: {questions[2]['text']}",
        reply_markup=create_options_keyboard(questions[2]["options"])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–µ—Ç—å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
@router.message(SuperheroTest.question3)
async def process_question_3(message: Message, state: FSMContext):
    answer = message.text
    
    # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
    selected_option = None
    for option in questions[2]["options"]:
        if option["text"] == answer:
            selected_option = option
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    if not selected_option:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    await state.update_data(q3=selected_option["points"])
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.set_state(SuperheroTest.question4)
    await message.answer(
        f"–í–æ–ø—Ä–æ—Å 4: {questions[3]['text']}",
        reply_markup=create_options_keyboard(questions[3]["options"])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
@router.message(SuperheroTest.question4)
async def process_question_4(message: Message, state: FSMContext):
    answer = message.text
    
    # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
    selected_option = None
    for option in questions[3]["options"]:
        if option["text"] == answer:
            selected_option = option
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    if not selected_option:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    await state.update_data(q4=selected_option["points"])
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.set_state(SuperheroTest.question5)
    await message.answer(
        f"–í–æ–ø—Ä–æ—Å 5: {questions[4]['text']}",
        reply_markup=create_options_keyboard(questions[4]["options"])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—è—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
@router.message(SuperheroTest.question5)
async def process_question_5(message: Message, state: FSMContext):
    answer = message.text
    
    # –ò—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
    selected_option = None
    for option in questions[4]["options"]:
        if option["text"] == answer:
            selected_option = option
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    if not selected_option:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    await state.update_data(q5=selected_option["points"])
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    data = await state.get_data()
    
    # –°—É–º–º–∏—Ä—É–µ–º –±–∞–ª–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è
    # –ü—Ä–æ—Ö–æ–∂—É—Å—å –ø–æ –≤—Å–µ–º –æ—Ç–≤–µ—Ç–∞–º –∏ —Å–æ–±–∏—Ä–∞—é –æ–±—â–∏–π —Å—á–µ—Ç
    results = {"batman": 0, "superman": 0, "ironman": 0, "spiderman": 0, "deadpool": 0}
    
    for q_key, points in data.items():
        for hero, value in points.items():
            results[hero] += value
    
    # –ò—â–µ–º —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–ª–ª–æ–≤
    max_points = 0
    chosen_hero = None
    
    for hero, points in results.items():
        if points > max_points:
            max_points = points
            chosen_hero = hero
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–µ—Ä–æ–µ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–ª–ª–æ–≤
    # –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö
    max_heroes = [hero for hero, points in results.items() if points == max_points]
    if len(max_heroes) > 1:
        chosen_hero = random.choice(max_heroes)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    hero_data = superhero_results[chosen_hero]
    await message.answer(
        f"üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: –¢—ã - {hero_data['name']}! üéâ\n\n{hero_data['description']}\n\n–•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑? –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /restart",
        reply_markup=ReplyKeyboardRemove()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())